/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  StakingInitializable,
  StakingInitializableInterface,
} from "../../../farming/StakingFactoryPool.sol/StakingInitializable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "poolLimitPerUser",
        type: "uint256",
      },
    ],
    name: "NewPoolLimit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPerBlock",
        type: "uint256",
      },
    ],
    name: "NewRewardPerBlock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
    ],
    name: "NewStartAndEndBlocks",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "RewardsStop",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenRecovery",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakedTokenSupply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accTokenPerShare",
        type: "uint256",
      },
    ],
    name: "UpdatePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "PRECISION_FACTOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKING_FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "emergencyRewardWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hasUserLimit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakedToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardEndBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_poolLimitPerUser",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_numberBlocksForUserLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_multisig",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "bool",
        name: "isInitialized",
        type: "bool",
      },
      {
        internalType: "address",
        name: "stakedToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "userLimit",
        type: "bool",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "startBlock",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "rewardEndBlock",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "lastRewardBlock",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "numberBlocksForUserLimit",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "poolLimitPerUser",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accTokenPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "recoverToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_userLimit",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_poolLimitPerUser",
        type: "uint256",
      },
    ],
    name: "updatePoolLimitPerUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardPerBlock",
        type: "uint256",
      },
    ],
    name: "updateRewardPerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardEndBlock",
        type: "uint256",
      },
    ],
    name: "updateStartAndEndBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5061001a33610027565b6001805533608052610077565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b608051611c486100996000396000818161031501526104b90152611c486000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806392e8990e116100ad578063ccd34cd511610071578063ccd34cd51461034a578063db2e21bc14610361578063f2fde38b14610369578063f40f0f521461037c578063feaea5861461038f57600080fd5b806392e8990e146102d25780639513997f146102ea578063a0b40905146102fd578063aac551e114610310578063b6b55f251461033757600080fd5b80632e1a7d4d116100f45780632e1a7d4d14610277578063662a2cb51461028a578063715018a61461029d57806380dc0672146102a55780638da5cb5b146102ad57600080fd5b806301f8a9761461012657806316f0115b1461013b5780631959a002146102285780632aa2c38114610264575b600080fd5b6101396101343660046117f4565b6103a2565b005b6003546004546005546006546007546008546009546101aa9660ff808216976001600160a01b036101008404811698600160a81b90940490921696918116956001600160401b03600160a01b90920482169584831695600160401b8604841695600160801b900490931693928c565b604080519c15158d526001600160a01b039b8c1660208e0152991515998c01999099529890961660608a01526001600160401b0394851660808a015292841660a089015290831660c08801529190911660e0860152610100850152610120840152610140830191909152610160820152610180015b60405180910390f35b61024f610236366004611829565b600a602052600090815260409020805460019091015482565b6040805192835260208301919091520161021f565b61013961027236600461184b565b610465565b6101396102853660046117f4565b610720565b6101396102983660046118bf565b6108a9565b6101396108ee565b610139610924565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161021f565b6102da6109ac565b604051901515815260200161021f565b6101396102f83660046118eb565b610a0b565b61013961030b36600461191b565b610c29565b6102ba7f000000000000000000000000000000000000000000000000000000000000000081565b6101396103453660046117f4565b610d4b565b61035360025481565b60405190815260200161021f565b610139610f19565b610139610377366004611829565b610fc0565b61035361038a366004611829565b61105b565b61013961039d366004611947565b611164565b6000546001600160a01b031633146103d55760405162461bcd60e51b81526004016103cc90611971565b60405180910390fd5b600454600160a01b90046001600160401b031643106104295760405162461bcd60e51b815260206004820152601060248201526f141bdbdb081a185cc81cdd185c9d195960821b60448201526064016103cc565b60088190556040518181527f0c4d677eef92893ac7ec52faf8140fc6c851ab4736302b4f3a89dfb20696a0df906020015b60405180910390a150565b60035460ff16156104ae5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064016103cc565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105145760405162461bcd60e51b815260206004820152600b60248201526a4e6f7420666163746f727960a81b60448201526064016103cc565b600380546001600160a01b03808b16610100026001600160a81b031990921691909117600117909155600480549189166001600160a01b031990921691909117905561055f8561138f565b600480546001600160401b0392909216600160a01b0267ffffffffffffffff60a01b199092169190911790556105948461138f565b6005805467ffffffffffffffff19166001600160401b03929092169190911790556105be8561138f565b600580546001600160401b0392909216600160401b0267ffffffffffffffff60401b1990921691909117905560088690558215610643576003805460ff60a81b1916600160a81b17905560068390556106168261138f565b600580546001600160401b0392909216600160801b0267ffffffffffffffff60801b199092169190911790555b6000876001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a791906119a6565b60ff169050601e81106106f35760405162461bcd60e51b815260206004820152601460248201527304d757374206265206c657373207468616e2033360641b60448201526064016103cc565b6106fe81601e6119df565b61070990600a611ada565b60025561071582610fc0565b505050505050505050565b600260015414156107435760405162461bcd60e51b81526004016103cc90611ae6565b6002600155336000908152600a6020526040902080548211156107a85760405162461bcd60e51b815260206004820152601b60248201527f416d6f756e7420746f20776974686472617720746f6f2068696768000000000060448201526064016103cc565b6107b06113fb565b6007546001820154600254835460009291906107cd908590611b1d565b6107d79190611b3c565b6107e191906119df565b9050831561082e5782546107f69085906119df565b83556009805485919060009061080d9084906119df565b909155505060035461082e9061010090046001600160a01b031633866114fc565b801561084b5760045461084b906001600160a01b031633836114fc565b600254835461085b908490611b1d565b6108659190611b3c565b600184015560405184815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050600180555050565b6000546001600160a01b031633146108d35760405162461bcd60e51b81526004016103cc90611971565b6004546108ea906001600160a01b031682846114fc565b5050565b6000546001600160a01b031633146109185760405162461bcd60e51b81526004016103cc90611971565b6109226000611617565b565b6000546001600160a01b0316331461094e5760405162461bcd60e51b81526004016103cc90611971565b6109574361138f565b6005805467ffffffffffffffff19166001600160401b039290921691821790556040519081527ffed9fcb0ca3d1e761a4b929792bb24082fba92dca81252646ad306d3068065669060200160405180910390a1565b600354600090600160a81b900460ff1615806109fa57506005546004546109ed916001600160401b03600160801b909104811691600160a01b900416611b5e565b6001600160401b03164310155b15610a055750600090565b50600190565b6000546001600160a01b03163314610a355760405162461bcd60e51b81526004016103cc90611971565b600454600160a01b90046001600160401b03164310610a895760405162461bcd60e51b815260206004820152601060248201526f141bdbdb081a185cc81cdd185c9d195960821b60448201526064016103cc565b808210610aef5760405162461bcd60e51b815260206004820152602e60248201527f4e6577207374617274426c6f636b206d757374206265206c6f7765722074686160448201526d6e206e657720656e64426c6f636b60901b60648201526084016103cc565b814310610b575760405162461bcd60e51b815260206004820152603060248201527f4e6577207374617274426c6f636b206d7573742062652068696768657220746860448201526f616e2063757272656e7420626c6f636b60801b60648201526084016103cc565b610b608261138f565b600480546001600160401b0392909216600160a01b0267ffffffffffffffff60a01b19909216919091179055610b958161138f565b6005805467ffffffffffffffff19166001600160401b0392909216919091179055610bbf8261138f565b600580546001600160401b0392909216600160401b0267ffffffffffffffff60401b1990921691909117905560408051838152602081018390527f7cd0ab87d19036f3dfadadb232c78aa4879dda3f0c994a9d637532410ee2ce0691015b60405180910390a15050565b6000546001600160a01b03163314610c535760405162461bcd60e51b81526004016103cc90611971565b600354600160a81b900460ff16610c9a5760405162461bcd60e51b815260206004820152600b60248201526a135d5cdd081899481cd95d60aa1b60448201526064016103cc565b8115610cfb576006548111610cf15760405162461bcd60e51b815260206004820152601860248201527f4e6577206c696d6974206d75737420626520686967686572000000000000000060448201526064016103cc565b6006819055610d18565b6003805460ff60a81b1916600160a81b8415150217905560006006555b6006546040519081527f241f67ee5f41b7a5cabf911367329be7215900f602ebfc47f89dce2a6bcd847c90602001610c1d565b60026001541415610d6e5760405162461bcd60e51b81526004016103cc90611ae6565b6002600155336000908152600a60205260409020610d8a6109ac565b6003805460ff60a81b1916600160a81b9215158302179081905560ff919004161580610dc357506006548154610dc09084611b89565b11155b610e0f5760405162461bcd60e51b815260206004820152601b60248201527f4465706f7369743a20416d6f756e742061626f7665206c696d6974000000000060448201526064016103cc565b610e176113fb565b600754815415610e705760008260010154600254838560000154610e3b9190611b1d565b610e459190611b3c565b610e4f91906119df565b90508015610e6e57600454610e6e906001600160a01b031633836114fc565b505b8215610ebc578154610e83908490611b89565b825560098054849190600090610e9a908490611b89565b9091555050600354610ebc9061010090046001600160a01b0316333086611667565b6002548254610ecc908390611b1d565b610ed69190611b3c565b600183015560405183815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a250506001805550565b60026001541415610f3c5760405162461bcd60e51b81526004016103cc90611ae6565b60026001908155336000908152600a60205260408120805482825592810191909155908015610f8157600354610f819061010090046001600160a01b031633836114fc565b815460405190815233907f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd96959060200160405180910390a2505060018055565b6000546001600160a01b03163314610fea5760405162461bcd60e51b81526004016103cc90611971565b6001600160a01b03811661104f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103cc565b61105881611617565b50565b6001600160a01b0381166000908152600a60205260408120600954600754600554600160401b90046001600160401b03164311801561109957508115155b15611132576005546000906110be90600160401b90046001600160401b031643611797565b6008549091506000906110d19083611b1d565b9050600084600254836110e49190611b1d565b6110ee9190611b3c565b6110f89085611b89565b905085600101546002548288600001546111129190611b1d565b61111c9190611b3c565b61112691906119df565b98975050505050505050565b60018301546002548454611147908490611b1d565b6111519190611b3c565b61115b91906119df565b95945050505050565b6000546001600160a01b0316331461118e5760405162461bcd60e51b81526004016103cc90611971565b6003546001600160a01b038381166101009092041614156112015760405162461bcd60e51b815260206004820152602760248201527f4f7065726174696f6e733a2043616e6e6f74207265636f766572207374616b6560448201526632103a37b5b2b760c91b60648201526084016103cc565b6004546001600160a01b038381169116141561126f5760405162461bcd60e51b815260206004820152602760248201527f4f7065726174696f6e733a2043616e6e6f74207265636f76657220726577617260448201526632103a37b5b2b760c91b60648201526084016103cc565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156112b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112da9190611ba1565b9050806113395760405162461bcd60e51b815260206004820152602760248201527f4f7065726174696f6e733a2043616e6e6f74207265636f766572207a65726f2060448201526662616c616e636560c81b60648201526084016103cc565b6113448383836114fc565b604080516001600160a01b038481168252602082018490528516917f12908d7ca4e5f7eaa347942be653a85ee08a103570143e4a7309fca3243bdf60910160405180910390a2505050565b60006001600160401b038211156113f75760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201526534206269747360d01b60648201526084016103cc565b5090565b600554600160401b90046001600160401b031643111561092257600954801561147f5760055460009061143e90600160401b90046001600160401b031643611797565b6008549091506000906114519083611b1d565b905082600254826114629190611b1d565b61146c9190611b3c565b6007546114799190611b89565b60075550505b6114884361138f565b6005805467ffffffffffffffff60401b1916600160401b6001600160401b03938416810291909117918290556007546040805192909304909316815260208101849052908101919091527ff5d2d72d9b25d6853afd7d0554a113b705234b6a68bb36b7f1436629946324119060600161045a565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916115589190611bba565b6000604051808303816000865af19150503d8060008114611595576040519150601f19603f3d011682016040523d82523d6000602084013e61159a565b606091505b50915091508180156115c45750805115806115c45750808060200190518101906115c49190611bf5565b6116105760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c45440060448201526064016103cc565b5050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392908816916116cb9190611bba565b6000604051808303816000865af19150503d8060008114611708576040519150601f19603f3d011682016040523d82523d6000602084013e61170d565b606091505b50915091508180156117375750805115806117375750808060200190518101906117379190611bf5565b61178f5760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b60648201526084016103cc565b505050505050565b6005546000906001600160401b031682116117bd576117b683836119df565b90506117ee565b6005546001600160401b031683106117d7575060006117ee565b6005546117b69084906001600160401b03166119df565b92915050565b60006020828403121561180657600080fd5b5035919050565b80356001600160a01b038116811461182457600080fd5b919050565b60006020828403121561183b57600080fd5b6118448261180d565b9392505050565b600080600080600080600080610100898b03121561186857600080fd5b6118718961180d565b975061187f60208a0161180d565b965060408901359550606089013594506080890135935060a0890135925060c089013591506118b060e08a0161180d565b90509295985092959890939650565b600080604083850312156118d257600080fd5b823591506118e26020840161180d565b90509250929050565b600080604083850312156118fe57600080fd5b50508035926020909101359150565b801515811461105857600080fd5b6000806040838503121561192e57600080fd5b82356119398161190d565b946020939093013593505050565b6000806040838503121561195a57600080fd5b6119638361180d565b91506118e26020840161180d565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156119b857600080fd5b815160ff8116811461184457600080fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156119f1576119f16119c9565b500390565b600181815b80851115611a31578160001904821115611a1757611a176119c9565b80851615611a2457918102915b93841c93908002906119fb565b509250929050565b600082611a48575060016117ee565b81611a55575060006117ee565b8160018114611a6b5760028114611a7557611a91565b60019150506117ee565b60ff841115611a8657611a866119c9565b50506001821b6117ee565b5060208310610133831016604e8410600b8410161715611ab4575081810a6117ee565b611abe83836119f6565b8060001904821115611ad257611ad26119c9565b029392505050565b60006118448383611a39565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6000816000190483118215151615611b3757611b376119c9565b500290565b600082611b5957634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160401b03808316818516808303821115611b8057611b806119c9565b01949350505050565b60008219821115611b9c57611b9c6119c9565b500190565b600060208284031215611bb357600080fd5b5051919050565b6000825160005b81811015611bdb5760208186018101518583015201611bc1565b81811115611bea576000828501525b509190910192915050565b600060208284031215611c0757600080fd5b81516118448161190d56fea26469706673582212207b8b7e42594db6793714d0a1c13cf5f0d69a9e535f418d13ebdc839ef31cea8064736f6c634300080c0033";

type StakingInitializableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingInitializableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingInitializable__factory extends ContractFactory {
  constructor(...args: StakingInitializableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StakingInitializable> {
    return super.deploy(overrides || {}) as Promise<StakingInitializable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StakingInitializable {
    return super.attach(address) as StakingInitializable;
  }
  override connect(signer: Signer): StakingInitializable__factory {
    return super.connect(signer) as StakingInitializable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInitializableInterface {
    return new utils.Interface(_abi) as StakingInitializableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingInitializable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StakingInitializable;
  }
}
